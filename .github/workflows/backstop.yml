name: BackstopJS Visual Regression Tests

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Run mode (test or approve)'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - approve
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backstop-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Ensure bitmaps_reference and bitmaps_test directories exist
        run: |
          mkdir -p backstop_data/bitmaps_reference
          mkdir -p backstop_data/bitmaps_test

      - name: Set mode
        id: set-mode
        run: echo "INPUT_MODE=${{ github.event.inputs.mode || 'test' }}" >> $GITHUB_ENV

      - name: Run BackstopJS tests
        run: |
          if [ "$INPUT_MODE" = "approve" ]; then
            echo "Approving screenshots."
            npx backstop reference
          else
            echo "Running BackstopJS tests."
            npx backstop test
          fi
        env:
          INPUT_MODE: ${{ env.INPUT_MODE }}

      # Handle approved reference images without changing branches
      - name: Commit and push approved reference images (if approve mode)
        if: always() && env.INPUT_MODE == 'approve'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch the latest from origin
          git fetch origin main

          # Add and commit changes to the references folder
          git add backstop_data/bitmaps_reference/
          git commit -m "Save BackstopJS approved reference screenshots" || echo "No changes to commit"

          # Push changes to the main branch
          git push origin main

      # Handle test screenshots with timestamp preservation
      - name: Commit and push test screenshots (if test mode)
        if: always() && env.INPUT_MODE == 'test'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Generate timestamped folder for test screenshots
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          mkdir -p backstop_data/bitmaps_test/${TIMESTAMP}

          # Move test screenshots into the timestamped folder
          mv backstop_data/bitmaps_test/*.png backstop_data/bitmaps_test/${TIMESTAMP}/ || echo "No files to move"

          # Fetch the latest from origin
          git fetch origin main

          # Add and commit changes to the test images folder
          git add backstop_data/bitmaps_test/
          git commit -m "Save BackstopJS test screenshots" || echo "No changes to commit"

          # Push changes to the main branch
          git push origin main

      # Steps to prepare and deploy the report
      - name: Create .nojekyll file
        run: echo > backstop_data/html_report/.nojekyll
        if: always() && env.INPUT_MODE == 'test'

      - name: Copy latest report to a static file name
        run: cp backstop_data/html_report/*.html backstop_data/html_report/latest-report.html
        if: always() && env.INPUT_MODE == 'test'

      - name: Prepare Deployment Folder
        if: always() && env.INPUT_MODE == 'test'
        run: |
            mkdir -p backstop-reports/html
            cp -r backstop_data/html_report/* backstop-reports/html/
            cp -r backstop_data/bitmaps_test backstop-reports/ 
            cp -r backstop_data/bitmaps_reference backstop-reports/ 

      - name: Deploy BackstopJS Report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        if: always() && env.INPUT_MODE == 'test'
        with:
          folder: backstop-reports
          token: ${{ secrets.GITHUB_TOKEN }}
          target-folder: backstop-reports
  send-slack-notification:
   needs: [backstop-tests] # Wait for both cypress-run and performance-tests to complete
   if: always() # Always run the Slack notification job regardless of the status of previous jobs
   runs-on: ubuntu-latest
   name: Send Slack Notification
   steps:
     - name: Slack Notification
       uses: rtCamp/action-slack-notify@v2      
       if: always()
       env:
        SLACK_CHANNEL: cypressautomation
        SLACK_COLOR: ${{ job.status }} 
        SLACK_TITLE: Page Load Results
        SLACK_USERNAME: testuser
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: |
            BackstopJS run completed with status: ${{ needs.backstop-tests.result }}.
            Mode: ${{ github.event.inputs.mode }}.
            Report URL: https://akanksha-099.github.io/CypressAutomation/backstop-reports/html/latest-report.html