name: Page Load Time Measurement

on:
  push:
    branches:
      - main 
  workflow_dispatch:  
  schedule:
   - cron: '0 0 * * 1'
permissions:
 contents: write
 pages: write
 id-token: write
jobs:
  measure-load-times:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: PageLoadTime
        run: npm install

      - name: Run page load time measurement script
        working-directory: PageLoadTime
        run: node loadtimes.js

      - name: Upload load times JSON
        uses: actions/upload-artifact@v3
        with:
          name: loadtimes
          path: PageLoadTime/logs/loadtimes_*.json
          retention-days: 2

      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: page-load-time-report
          path: PageLoadTime/reports/PageLoadTimeReport_*.html
          retention-days: 2
      
      
      - name: Deploy Page Load Time Report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: PageLoadTime/reports/PageLoadTimeReport_*.html 
          token: ${{ secrets.GITHUB_TOKEN }}
          target-folder: page-load-times

  send-slack-notification:
   needs: [measure-load-times] # Wait for both cypress-run and performance-tests to complete
   if: always() # Always run the Slack notification job regardless of the status of previous jobs
   runs-on: ubuntu-latest
   name: Send Slack Notification
   steps:
     - name: Slack Notification
       uses: rtCamp/action-slack-notify@v2      
       if: always()
       env:
        SLACK_CHANNEL: cypressautomation
        SLACK_COLOR: ${{ job.status }} 
        SLACK_TITLE: Page Load Results
        SLACK_USERNAME: testuser
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: "Page Load Times Job Status: ${{ needs.measure-load-times.result }} "