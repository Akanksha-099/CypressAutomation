// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import { Trend, Rate, Counter, Gauge } from 'k6/metrics';
import http from "k6/http";
import { sleep, group } from 'k6';
import { htmlReport } from "https://raw.githubusercontent.com/benc-uk/k6-reporter/main/dist/bundle.js";
import { textSummary } from "https://jslib.k6.io/k6-summary/0.0.1/index.js";

export const TrendRTT = new Trend('RTT');
export const RateContentOK = new Rate('Content_OK');
export const GaugeContentSize = new Gauge('ContentSize');
export const CounterErrors = new Counter('Errors');
export let options = {
  maxRedirects: 4,
  stages: [
    { duration: '30s', target: 10 }, // Ramp-up to 10 virtual users in 30 seconds
    { duration: '1m', target: 10 },  // Stay at 10 virtual users for 1 minute
    { duration: '30s', target: 0 },  // Ramp-down to 0 virtual users in 30 seconds
  ],
  thresholds: {
    http_req_duration: ['p(95)<500'], // Set a performance threshold for 95th percentile response time
    'Errors': ['count<100'],
    // Gauge: returned content must be smaller than 4000 bytes
    'ContentSize': ['value<4000'],
    // Rate: content must be OK more than 95 times
    'Content_OK': ['rate>0.95'],
    // Trend: Percentiles, averages, medians, and minimums
    // must be within specified milliseconds.
    'RTT': ['p(99)<300', 'p(70)<250', 'avg<200', 'med<150', 'min<100'],
  
  },
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    placeId: ""
  }
});

export default function() {
  postman[Request]({
    name: "Add Place API",
    id: "ac6b2239-7482-4654-ab1d-ecf682bd3512",
    method: "POST",
    address: "http://216.10.245.166/maps/api/place/add/json?key=qaclick123",
    data:
      '{\n  "location": {\n    "lat": -38.383494,\n    "lng": 33.427362\n  },\n  "accuracy": 50,\n  "name": "Frontline house",\n  "phone_number": "(+91) 983 893 3937",\n  "address": "29, side layout, cohen 09",\n  "types": [\n    "shoe park",\n    "shop"\n  ],\n  "website": "http://google.com",\n  "language": "French-IN"\n}',
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
      var placeId = pm.response.json();
      pm.collectionVariables.set("placeId", placeId.place_id);
    }
  });

  postman[Request]({
    name: "Get Place API",
    id: "1045ae9d-97a0-4add-8058-b6d6ebbcdc25",
    method: "GET",
    address:
      "http://216.10.245.166/maps/api/place/get/json?place_id={{placeId}}&key=qaclick123"
  });

  postman[Request]({
    name: "Update Place API",
    id: "71a34942-ffbe-4bbe-ad89-6cadeb1473de",
    method: "PUT",
    address: "http://216.10.245.166/maps/api/place/update/json?key=qaclick123",
    data:
      '{\n"place_id":"{{placeId}}",\n"address":"70 winter walk, USA",\n"key":"qaclick123"\n}'
  });

  postman[Request]({
    name: "Delete Place API",
    id: "4967e3b3-8601-4d56-9dc0-bc9e9eb978c4",
    method: "DELETE",
    address: "http://216.10.245.166/maps/api/place/delete/json?key=qaclick123",
    data: '{\n\n    "place_id":"{{placeId}}"\n}\n'
  });
  let response = http.get('http://216.10.245.166/maps/api/place/get/json?place_id={{placeId}}&key=qaclick123');
  const contentValue = response.json('msg');
  const contentOK = contentValue === "Get operation failed, looks like place_id doesn't exist";
// console.log(`Response 'msg' Value: ${contentValue}`);
// console.log(`Content OK: ${contentOK}`);
// console.log(`Response Duration: ${response.timings.duration} ms`);
// console.log(`Response Body Length: ${response.body.length}`);
// console.log(`Errors: ${!contentOK}`);
  TrendRTT.add(response.timings.duration);
  RateContentOK.add(contentOK);
  GaugeContentSize.add(response.body.length);
  CounterErrors.add(!contentOK);
  sleep(1);
}
export function handleSummary(data) {
  return {
    "summary/result.html": htmlReport(data),
    stdout: textSummary(data, { indent: " ", enableColors: true }),
    'summary/summary.json': JSON.stringify(data)
  };
}
